'use strict'

import Middleware from './middleware'
import Renderer from './renderer'
import Routes from './routes'
import Serve from './server'
import Auth from './auth'
import Koa from 'koa'

import devServer from './build/setup-dev-server'
import { createRenderer } from './server'

const app = new Koa()

let renderer
if (process.env.NODE_ENV === 'production') {
  // in production: create server renderer and index HTML from real fs
  // the server bundle is generated by vue-ssr-webpack-plugin
  const bundle = require('./dist/vue-ssr-bundle.json')
  const template = fs.readFileSync(resolve('../dist/index.html'), 'utf-8')
  renderer = createRenderer(bundle, template)
} else {
  devServer(app, (bundle, template) => {
    renderer = createRenderer(bundle, template)
  })
}

app
  .use(Middleware())                   // Contains 3rd parties middlewares
  .use(Auth())                         // Initialize passportjs middleware
  .use(Routes())                       // Contains internal apis
  .use(ctx => ctx.renderer = renderer) // Setup the renderer
  .use(Serve())                        // Setup SSR (server-side-rendering)
  .use(ctx => ctx.status = 404)        // Return 404 Not Found

export default app
